.TH CHARDET_OBJ_INIT 3 "22 Feb 2009"
.UC 4
.SH 이름
chardet_obj_init - libchardet 의 결과 값 structure 초기화
.SH 사용법
.I #include <chardet.h>
.br
.I DetectObj chardet_obj_init (void);
.SH 설명
chardet_obj_init() 함수는 chardet API 또는 chardet_handledata API 의 결과 값을
받을 DetectObj structure를 초기화 한다.
.SH 반환값
DetectObject struct 를 반환한다. 반환된 값은 chardet_obj_free API 를 이용하여 메모리 해제를 해 주어야 한다.
.nf

	typedef struct DetectObject {
		char * encoding;
		float confidence;
	} DetectObj;
.PP
.SH 예제
.nf
#include <chardet.h>

int main (void) {
	DetectObj *obj;

	if ( (obj = detect_obj_init ()) == NULL ) {
		fprintf (stderr, "Memory Allocation failed\\n");
		return CHARDET_MEM_ALLOCATED_FAIL;
	}

	switch (detect ("안녕하세요", &obj)) {
		case CHARDET_OUT_OF_MEMORY :
			fprintf (stderr, "On handle processing, occured out of memory\\n");
			detect_obj_free (&obj);
			return CHARDET_OUT_OF_MEMORY;
		case CHARDET_NULL_OBJECT :
			fprintf (stderr,
					"2st argument of chardet() is must memory allocation "
					"with detect_obj_init API\\n");
			return CHARDET_NULL_OBJECT;
	}

	printf ("encoding: %s, confidence: %f\\n", obj->encoding, obj->confidence);
	detect_obj_free (&obj);

    return 0;
}
.fi
.SH 저자
김정균
.SH 버그 리포트
<http://oops.org> 의 QnA 게시판을 이용한다.
.SH 저작권
Copyright (c) 2009 OOPS Development Organization

이 프로그램은 MPL/GPL2/LGPL2.1 을 따르며, 사용시의 어떠한 문제에 대하여 보증하지 않는다.
.SH "참고"
detect_obj_free(3), detect(3), detect_handledata(3)

