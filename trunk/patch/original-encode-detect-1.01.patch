
Oridignal Encode-Detect code 1.01 diff
$Id$

diff -urNp Encode-Detect-1.01/src/Makefile.in libchardet-1.0.0/src/Makefile.in
--- Encode-Detect-1.01/src/Makefile.in	1970-01-01 09:00:00.000000000 +0900
+++ libchardet-1.0.0/src/Makefile.in	2009-02-21 04:34:01.000000000 +0900
@@ -0,0 +1,110 @@
+# $Id$
+srcdir          = @srcdir@
+top_srcdir      = @top_srcdir@
+builddir        = @builddir@
+top_builddir    = ..
+
+build           = @build@
+build_cpu       = @build_cpu@
+build_vendor    = @build_vendor@
+build_os        = @build_os@
+host            = @host@
+host_cpu        = @host_cpu@
+host_vendor     = @host_vendor@
+
+PROG            = @PACKAGE_NAME@
+VERSION         = @PACKAGE_VERSION@
+CC              = @CC@ -Wall
+CXX             = @CXX@ -Wall
+CFLAGS          = @CFLAGS@
+CPPFLAGS        = -I. -I.. -I../include @CPPFLAGS@
+LIBS            = @LIBS@ -lstdc++
+LDFLAGS         = @LDFLAGS@ $(LIBS)
+DEFS            = @DEFS@ $(CPPFLAGS)
+
+SONAME_MAJOR    = @SONAME_MAJOR@
+SONAME_MINOR    = @SONAME_MINOR@
+SONAME_REVISION = @SONAME_REVISION@
+SONAME_INFO     = @SONAME_INFO@
+SONAME_VERSION  = @SONAME_VERSION@
+
+prefix          = @prefix@
+exec_prefix     = @exec_prefix@
+datadir         = @datadir@
+includedir      = @includedir@
+libdir          = @libdir@
+bindir          = @bindir@
+mandir          = @mandir@
+DESTDIR         =
+
+LIBTOOL         = @LIBTOOL@
+INSTALL         = @INSTALL@
+RM              = @RM@ -f
+MAKE            = @MAKE@
+MKDIR           = @MKDIR@ -p
+STRIP           = @STRIP@
+PERL            = @PERL@
+
+CC_OPT          = $(CC) $(CFLAGS) $(DEFS)
+LINK            = $(LIBTOOL) --mode=link $(CC_OPT) -rpath $(libdir) -version-info $(SONAME_INFO)
+COMPILE         = $(LIBTOOL) --mode=compile $(CC_OPT) $(DEFS) -prefer-pic
+P_LIBTOOL       = $(LIBTOOL) --mode=install @INSTALL_PROGRAM@ -m755
+D_LIBTOOL       = $(LIBTOOL) --mode=install @INSTALL_DATA@
+L_LIBTOOL       = $(LIBTOOL) --mode=install $(INSTALL)
+
+UC_SRCS = CharDistribution.cpp JpCntx.cpp LangBulgarianModel.cpp \
+		LangCyrillicModel.cpp LangGreekModel.cpp LangHebrewModel.cpp \
+		LangHungarianModel.cpp LangThaiModel.cpp nsBig5Prober.cpp \
+		nsCharSetProber.cpp nsEUCJPProber.cpp nsEUCKRProber.cpp \
+		nsEUCTWProber.cpp nsEscCharsetProber.cpp nsEscSM.cpp \
+		nsGB2312Prober.cpp nsHebrewProber.cpp nsLatin1Prober.cpp \
+		nsMBCSGroupProber.cpp nsMBCSSM.cpp nsSBCSGroupProber.cpp \
+		nsSBCharSetProber.cpp nsSJISProber.cpp nsUTF8Prober.cpp \
+		nsUniversalDetector.cpp chardet.cpp
+
+#UC_HEADERS = CharDistribution.h JpCntx.h nsBig5Prober.h \
+#		nsCharSetProber.h nsCodingStateMachine.h nsEUCJPProber.h \
+#		nsEUCKRProber.h nsEUCTWProber.h nsEscCharsetProber.h \
+#		nsGB2312Prober.h nsHebrewProber.h nsLatin1Prober.h \
+#		nsMBCSGroupProber.h nsPkgInt.h nsSBCSGroupProber.h \
+#		nsSBCharSetProber.h nsSJISProber.h nsUTF8Prober.h \
+#		nsUniversalDetector.h ../include/nscore.h  ../include/prmem.h
+UC_HEADERS = nsUniversalDetector.h ../include/nscore.h chardet.h
+
+UC_OBJS = $(UC_SRCS:.cpp=.lo)
+
+%.lo: %.cpp
+	$(COMPILE) -o $@ -c $<
+
+all: libs chardet-config
+
+libs: $(UC_OBJS)
+	$(LINK) -o lib$(PROG).la $(UC_OBJS) $(LDFLAGS)
+
+chardet-config:
+	$(INSTALL) -m755 $(top_srcdir)/$(PROG)-config.in $(PROG)-config ; \
+	$(PERL) -pi -e "s!\@prefix\@!$(prefix)!g" $(PROG)-config ; \
+	$(PERL) -pi -e "s!\@exec_prefix\@!$(exec_prefix)!g" $(PROG)-config ; \
+	$(PERL) -pi -e "s!\@VERSION\@!$(VERSION)!g" $(PROG)-config ; \
+	$(PERL) -pi -e "s!\@includedir\@!$(includedir)!g" $(PROG)-config ; \
+	$(PERL) -pi -e "s!\@libdir\@!$(libdir)!g" $(PROG)-config ; \
+	$(PERL) -pi -e "s!\@CFLAGS\@!$(CFLAGS)!g" $(PROG)-config ; \
+	$(PERL) -pi -e "s!\@prog\@!$(PROG)!g" $(PROG)-config ;
+
+install: install-header
+	$(MKDIR) $(DESTDIR)$(bindir)
+	$(MKDIR) $(DESTDIR)$(libdir)
+	$(P_LIBTOOL) $(PROG)-config $(DESTDIR)$(bindir)/$(PROG)-config
+	$(L_LIBTOOL) lib$(PROG).la $(DESTDIR)$(libdir)/lib$(PROG).la
+	$(LIBTOOL) --finish $(libdir)
+
+install-header:
+	$(MKDIR) $(DESTDIR)$(includedir)/$(PROG)
+	for i in $(UC_HEADERS); do \
+		$(D_LIBTOOL) $$i $(DESTDIR)$(includedir)/$(PROG)/ ; \
+	done
+	$(D_LIBTOOL) $(top_srcdir)/$(PROG)-config.h $(DESTDIR)$(includedir)/$(PROG)/
+
+clean:
+	-$(RM) -r *.o *.lo* *.la* .libs
+
diff -urNp Encode-Detect-1.01/src/chardet.cpp libchardet-1.0.0/src/chardet.cpp
--- Encode-Detect-1.01/src/chardet.cpp	1970-01-01 09:00:00.000000000 +0900
+++ libchardet-1.0.0/src/chardet.cpp	2009-02-22 04:52:22.000000000 +0900
@@ -0,0 +1,153 @@
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * Mozilla's universal charset detector C/C++ Wrapping API
+ *      Writer(s) :
+ *          Detect class by John Gardiner Myers <jgmyers@proofpoint.com>
+ *          C wrapping API by JoungKyun.Kim <http://oops.org>
+ *
+ * $Id$
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+#include <prmem.h>
+#include <nscore.h>
+#include <nsUniversalDetector.h>
+
+class Detector: public nsUniversalDetector {
+	public:
+		Detector () {};
+		virtual ~Detector () {}
+		const char *getCharsetName () { return mDetectedCharset; }
+		float getConfidence () { return mDetectedConfidence; }
+		virtual void Reset () { this->nsUniversalDetector::Reset (); }
+	protected:
+		virtual void Report (const char* aCharset) { mDetectedCharset = aCharset; }
+};
+
+typedef struct Detect_t {
+	Detector *detect;
+} Detect;
+
+#include <chardet.h>
+
+DetectObj * detect_obj_init (void) {
+	DetectObj * obj;
+
+	if ( (obj = (DetectObj *) PR_Malloc (sizeof (DetectObj))) == NULL )
+		return NULL;
+
+	obj->encoding = NULL;
+	obj->confidence = 0.0;
+
+	return obj;
+}
+
+void detect_obj_free (DetectObj ** obj) {
+	if ( *obj != NULL ) {
+		PR_FREEIF ((*obj)->encoding);
+		PR_FREEIF (*obj);
+	}
+}
+
+Detect * detect_init (void) {
+	Detect *det = NULL;
+
+	det = (Detect *) PR_Malloc (sizeof (Detect));
+
+	if ( det == NULL )
+		return NULL;
+
+	det->detect	= new Detector;
+	return det;
+}
+
+void detect_reset (Detect **det) {
+	(*det)->detect->Reset ();
+}
+
+void detect_dataend (Detect **det) {
+	(*det)->detect->DataEnd ();
+}
+
+short detect_handledata (Detect ** det, const char * buf, DetectObj ** obj) {
+	const char * ret;
+
+	if ( (*det)->detect->HandleData (buf, strlen (buf)) == NS_ERROR_OUT_OF_MEMORY )
+		return CHARDET_OUT_OF_MEMORY;
+	(*det)->detect->DataEnd ();
+
+	ret = (*det)->detect->getCharsetName ();
+
+	if ( ! ret )
+		return CHARDET_NO_RESULT;
+	else if ( *obj == NULL )
+		return CHARDET_NULL_OBJECT;
+
+	(*obj)->encoding = (char *) strdup (ret);
+	(*obj)->confidence = (*det)->detect->getConfidence ();
+
+	return CHARDET_SUCCESS;
+}
+
+void detect_destroy (Detect **det) {
+	delete (*det)->detect;
+	PR_FREEIF (*det);
+}
+
+short detect (const char *buf, DetectObj ** obj) {
+	Detector * det;
+	const char * ret;
+
+	det = new Detector;
+	det->Reset ();
+	if ( det->HandleData (buf, strlen (buf)) == NS_ERROR_OUT_OF_MEMORY ) {
+		delete det;
+		return CHARDET_OUT_OF_MEMORY;
+	}
+	det->DataEnd ();
+
+	ret = det->getCharsetName ();
+	delete det;
+
+	if ( ! ret )
+		return CHARDET_NO_RESULT;
+	else if ( *obj == NULL )
+		return CHARDET_NULL_OBJECT;
+
+	(*obj)->encoding = (char *) strdup (ret);
+	(*obj)->confidence = det->getConfidence ();
+
+	return CHARDET_SUCCESS;
+}
+
+/*
+ * Local variables:
+ * tab-width: 4
+ * c-basic-offset: 4
+ * End:
+ * vim600: noet sw=4 ts=4 fdm=marker
+ * vim<600: noet sw=4 ts=4
+ */ 
diff -urNp Encode-Detect-1.01/src/chardet.h libchardet-1.0.0/src/chardet.h
--- Encode-Detect-1.01/src/chardet.h	1970-01-01 09:00:00.000000000 +0900
+++ libchardet-1.0.0/src/chardet.h	2009-02-22 05:02:21.000000000 +0900
@@ -0,0 +1,80 @@
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * Mozilla's universal charset detector C/C++ Wrapping API
+ *      Writer(s) :
+ *          Detect class by John Gardiner Myers <jgmyers@proofpoint.com>
+ *          C wrapping API by JoungKyun.Kim <http://oops.org>
+ *
+ * $Id$
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+#ifdef HAVE_CONFIG_H
+#include <chardet-config.h>
+#endif
+
+#include <stdio.h>
+#include <string.h>
+
+#define CHARDET_OUT_OF_MEMORY -128
+#define CHARDET_MEM_ALLOCATED_FAIL -127
+
+#define CHARDET_SUCCESS     0
+#define CHARDET_NO_RESULT   1
+#define CHARDET_NULL_OBJECT 2
+
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+	typedef struct Detect_t Detect;
+
+	typedef struct DetectObject {
+		char * encoding;
+		float confidence;
+	} DetectObj;
+
+	DetectObj * detect_obj_init (void);
+	void detect_obj_free (DetectObj **);
+
+	Detect * detect_init (void);
+	void detect_reset (Detect **);
+	void detect_dataend (Detect **);
+	short detect_handledata (Detect **, const char *, DetectObj **);
+	void detect_destroy (Detect **);
+	short detect (const char *, DetectObj **);
+#ifdef __cplusplus
+};
+#endif
+
+/*
+ * Local variables:
+ * tab-width: 4
+ * c-basic-offset: 4
+ * End:
+ * vim600: noet sw=4 ts=4 fdm=marker
+ * vim<600: noet sw=4 ts=4
+ */
diff -urNp Encode-Detect-1.01/src/nsUniversalDetector.cpp libchardet-1.0.0/src/nsUniversalDetector.cpp
--- Encode-Detect-1.01/src/nsUniversalDetector.cpp	2008-05-28 05:35:11.000000000 +0900
+++ libchardet-1.0.0/src/nsUniversalDetector.cpp	2009-02-22 03:23:47.000000000 +0900
@@ -21,6 +21,10 @@
  *
  * Contributor(s):
  *          Shy Shalom <shooshX@gmail.com>
+ *          JoungKyun.Kim <http://oops.org>
+ *            - Add mDetectedConfidence
+ *
+ * $Id$
  *
  * Alternatively, the contents of this file may be used under the terms of
  * either the GNU General Public License Version 2 or later (the "GPL"), or
@@ -54,6 +58,7 @@ nsUniversalDetector::nsUniversalDetector
 
   mStart = PR_TRUE;
   mDetectedCharset = nsnull;
+  mDetectedConfidence = 0.0;
   mGotData = PR_FALSE;
   mInputState = ePureAscii;
   mLastChar = '\0';
@@ -81,6 +86,7 @@ nsUniversalDetector::Reset()
 
   mStart = PR_TRUE;
   mDetectedCharset = nsnull;
+  mDetectedConfidence = 0.0;
   mGotData = PR_FALSE;
   mInputState = ePureAscii;
   mLastChar = '\0';
@@ -114,33 +120,44 @@ nsresult nsUniversalDetector::HandleData
       switch (aBuf[0])
         {
         case '\xEF':
-          if (('\xBB' == aBuf[1]) && ('\xBF' == aBuf[2]))
+          if (('\xBB' == aBuf[1]) && ('\xBF' == aBuf[2])) {
             // EF BB BF  UTF-8 encoded BOM
             mDetectedCharset = "UTF-8";
+            mDetectedConfidence = 1.0;
+          }
         break;
         case '\xFE':
-          if (('\xFF' == aBuf[1]) && ('\x00' == aBuf[2]) && ('\x00' == aBuf[3]))
+          if (('\xFF' == aBuf[1]) && ('\x00' == aBuf[2]) && ('\x00' == aBuf[3])) {
             // FE FF 00 00  UCS-4, unusual octet order BOM (3412)
             mDetectedCharset = "X-ISO-10646-UCS-4-3412";
-          else if ('\xFF' == aBuf[1])
+            mDetectedConfidence = 1.0;
+          } else if ('\xFF' == aBuf[1]) {
             // FE FF  UTF-16, big endian BOM
             mDetectedCharset = "UTF-16BE";
+            mDetectedConfidence = 1.0;
+          }
         break;
         case '\x00':
-          if (('\x00' == aBuf[1]) && ('\xFE' == aBuf[2]) && ('\xFF' == aBuf[3]))
+          if (('\x00' == aBuf[1]) && ('\xFE' == aBuf[2]) && ('\xFF' == aBuf[3])) {
             // 00 00 FE FF  UTF-32, big-endian BOM
             mDetectedCharset = "UTF-32BE";
-          else if (('\x00' == aBuf[1]) && ('\xFF' == aBuf[2]) && ('\xFE' == aBuf[3]))
+            mDetectedConfidence = 1.0;
+          } else if (('\x00' == aBuf[1]) && ('\xFF' == aBuf[2]) && ('\xFE' == aBuf[3])) {
             // 00 00 FF FE  UCS-4, unusual octet order BOM (2143)
             mDetectedCharset = "X-ISO-10646-UCS-4-2143";
+            mDetectedConfidence = 1.0;
+          }
         break;
         case '\xFF':
-          if (('\xFE' == aBuf[1]) && ('\x00' == aBuf[2]) && ('\x00' == aBuf[3]))
+          if (('\xFE' == aBuf[1]) && ('\x00' == aBuf[2]) && ('\x00' == aBuf[3])) {
             // FF FE 00 00  UTF-32, little-endian BOM
             mDetectedCharset = "UTF-32LE";
-          else if ('\xFE' == aBuf[1])
+            mDetectedConfidence = 1.0;
+          } else if ('\xFE' == aBuf[1]) {
             // FF FE  UTF-16, little endian BOM
             mDetectedCharset = "UTF-16LE";
+            mDetectedConfidence = 1.0;
+          }
         break;
       }  // switch
 
@@ -210,6 +227,7 @@ nsresult nsUniversalDetector::HandleData
     {
       mDone = PR_TRUE;
       mDetectedCharset = mEscCharSetProber->GetCharSetName();
+      mDetectedConfidence = mEscCharSetProber->GetConfidence();
     }
     break;
   case eHighbyte:
@@ -220,12 +238,16 @@ nsresult nsUniversalDetector::HandleData
       {
         mDone = PR_TRUE;
         mDetectedCharset = mCharSetProbers[i]->GetCharSetName();
+        mDetectedConfidence = mCharSetProbers[i]->GetConfidence();
         return NS_OK;
       } 
     }
     break;
 
   default:  //pure ascii
+    mDone = PR_TRUE;
+    mDetectedCharset = "ASCII";
+    mDetectedConfidence = 1.0;
     ;//do nothing here
   }
   return NS_OK;
@@ -266,9 +288,12 @@ void nsUniversalDetector::DataEnd()
           maxProber = i;
         }
       }
+      mDetectedConfidence = maxProberConfidence;
       //do not report anything because we are not confident of it, that's in fact a negative answer
-      if (maxProberConfidence > MINIMUM_THRESHOLD)
+      if (maxProberConfidence > MINIMUM_THRESHOLD) {
         Report(mCharSetProbers[maxProber]->GetCharSetName());
+        mDetectedConfidence = mCharSetProbers[maxProber]->GetConfidence();
+      }
     }
     break;
   case eEscAscii:
diff -urNp Encode-Detect-1.01/src/nsUniversalDetector.h libchardet-1.0.0/src/nsUniversalDetector.h
--- Encode-Detect-1.01/src/nsUniversalDetector.h	2008-05-28 05:35:11.000000000 +0900
+++ libchardet-1.0.0/src/nsUniversalDetector.h	2009-02-22 03:23:46.000000000 +0900
@@ -20,6 +20,10 @@
  * the Initial Developer. All Rights Reserved.
  *
  * Contributor(s):
+ *          JoungKyun.Kim <http://oops.org>
+ *            - Add mDetectedConfidence
+ *
+ * $Id$
  *
  * Alternatively, the contents of this file may be used under the terms of
  * either the GNU General Public License Version 2 or later (the "GPL"), or
@@ -65,6 +69,7 @@ protected:
    PRBool  mGotData;
    char    mLastChar;
    const char *  mDetectedCharset;
+   float   mDetectedConfidence;
    PRInt32 mBestGuess;
 
    nsCharSetProber  *mCharSetProbers[NUM_OF_CHARSET_PROBERS];
